% ------------------ 
% Assignment 1, Program e
% Requirements:      A program using non-recursive functions with parameters
% Description:       This program defines a function for calculating modulo,
%                    then it uses that function and outputs the result.
% Expected Output:   "trying: a mod b, a > b ... correct" 
%                    "trying: a mod b, a < b ... correct"
% Key Rules Used:
%      statement: 'result' expression
%                 procedurename '(' arguments ')'
%    declaration: type identifier '(' parameters ')' ':' scope
%                 'proc' identifier '(' parameters ')' ':' scope
%          scope: '{' statement '}'
%      arguments: expression
%                 arguments ',' arguments
%     parameters: type identifier
%                 parameters, parameters
%     expression: functionname '(' arguments ')' 
%                 parametername
%   functionname: identifier
%  parametername: identifier
% ------------------ 
{
	% return a mod b
	int mod ( int a, int b) :
	{
		result a - (a / b) * b
	}

	% print test outcome 
	proc test_outcome (int outcome, int expected) : 
	{
		if ( outcome = expected ) then
			put "correct", skip
		else 
			put "incorrect", skip
		fi
	}

	% variable declaration
	int x
	int y

	% variable initialization	
	x = 10	
	y = 7
	
	put "trying: a mod b, a > b ... " 
	test_outcome( mod(x + y, 3), 2)

	put "trying: a mod b, a < b ... " 
	test_outcome( mod(x + y, 18), 17)
}
