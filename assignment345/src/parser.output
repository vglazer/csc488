Grammar

    0 $accept: program $end

    1 program: scope

    2 statements: statement
    3           | statements statement

    4 declarations: declaration
    5             | declarations declaration

    6 scope: '{' optDeclarations statements '}'

    7 optDeclarations: declarations
    8                | %empty

    9 statement: variable '=' expression
   10          | ifstatement
   11          | WHILE expression DO statements OD
   12          | DO statements UNTIL expression
   13          | EXIT
   14          | RETURN
   15          | RESULT expression
   16          | PUT outputs
   17          | GET inputs
   18          | procStatement
   19          | scope
   20          | FOR variable ':' '=' expression TO expression byPart statements ROF
   21          | ASSERT expression

   22 byPart: BY INTCONST
   23       | BY '-' INTCONST
   24       | %empty

   25 procStatement: IDENT
   26              | IDENT '(' arguments ')'

   27 ifstatement: IF expression THEN statements ELSE statements FI
   28            | IF expression THEN statements FI

   29 declaration: typeAndIdent
   30            | typeAndIdent '=' expression
   31            | typeAndIdent '[' INTCONST ']'
   32            | typeAndIdent routineBody
   33            | PROC IDENT routineBody

   34 routineBody: '(' parameters ')' ':' scope
   35            | '(' parameters ')' ':' FORWARD
   36            | ':' FORWARD
   37            | ':' scope

   38 typeAndIdent: type IDENT

   39 parameters: typeAndIdent
   40           | parameters ',' typeAndIdent

   41 arguments: expression
   42          | arguments ',' expression

   43 type: INT
   44     | BOOL

   45 output: expression
   46       | TEXTCONST
   47       | SKIP

   48 outputs: output
   49        | outputs ',' output

   50 inputs: input
   51       | inputs ',' input

   52 input: variable

   53 expression: conjunction
   54           | expression '|' conjunction

   55 conjunction: negation
   56            | conjunction '&' negation

   57 negation: compareExpr
   58         | '!' negation

   59 compareExpr: arithExpr
   60            | arithExpr '=' arithExpr
   61            | arithExpr '#' arithExpr
   62            | arithExpr '>' arithExpr
   63            | arithExpr '>' '=' arithExpr
   64            | arithExpr '<' arithExpr
   65            | arithExpr '<' '=' arithExpr

   66 arithExpr: term
   67          | arithExpr '+' term
   68          | arithExpr '-' term

   69 term: factor
   70     | term '*' factor
   71     | term '/' factor

   72 factor: primary
   73       | '-' factor

   74 primary: '(' expression ')'
   75        | '(' expression '?' expression ':' expression ')'
   76        | variable
   77        | functionCall
   78        | constant

   79 functionCall: IDENT '(' arguments ')'

   80 constant: INTCONST
   81         | TTRUE
   82         | TFALSE

   83 variable: IDENT
   84         | IDENT '[' arithExpr ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 58
'#' (35) 61
'&' (38) 56
'(' (40) 26 34 35 74 75 79
')' (41) 26 34 35 74 75 79
'*' (42) 70
'+' (43) 67
',' (44) 40 42 49 51
'-' (45) 23 68 73
'/' (47) 71
':' (58) 20 34 35 36 37 75
'<' (60) 64 65
'=' (61) 9 20 30 60 63 65
'>' (62) 62 63
'?' (63) 75
'[' (91) 31 84
']' (93) 31 84
'{' (123) 6
'|' (124) 54
'}' (125) 6
error (256)
IDENT (258) 25 26 33 38 79 83 84
TEXTCONST (259) 46
INTCONST (260) 22 23 31 80
BOOL (261) 44
DO (262) 11 12
ELSE (263) 27
EXIT (264) 13
FI (265) 27 28
GET (266) 17
IF (267) 27 28
INT (268) 43
OD (269) 11
PROC (270) 33
PUT (271) 16
SKIP (272) 47
RESULT (273) 15
RETURN (274) 14
THEN (275) 27 28
TFALSE (276) 82
TTRUE (277) 81
UNTIL (278) 12
WHILE (279) 11
FOR (280) 20
TO (281) 20
BY (282) 22 23
ROF (283) 20
FORWARD (284) 35 36
ASSERT (285) 21


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
statements (53)
    on left: 2 3, on right: 3 6 11 12 20 27 28
declarations (54)
    on left: 4 5, on right: 5 7
scope (55)
    on left: 6, on right: 1 19 34 37
optDeclarations (56)
    on left: 7 8, on right: 6
statement (57)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21, on right: 2 3
byPart (58)
    on left: 22 23 24, on right: 20
procStatement (59)
    on left: 25 26, on right: 18
ifstatement (60)
    on left: 27 28, on right: 10
declaration (61)
    on left: 29 30 31 32 33, on right: 4 5
routineBody (62)
    on left: 34 35 36 37, on right: 32 33
typeAndIdent (63)
    on left: 38, on right: 29 30 31 32 39 40
parameters (64)
    on left: 39 40, on right: 34 35 40
arguments (65)
    on left: 41 42, on right: 26 42 79
type (66)
    on left: 43 44, on right: 38
output (67)
    on left: 45 46 47, on right: 48 49
outputs (68)
    on left: 48 49, on right: 16 49
inputs (69)
    on left: 50 51, on right: 17 51
input (70)
    on left: 52, on right: 50 51
expression (71)
    on left: 53 54, on right: 9 11 12 15 20 21 27 28 30 41 42 45 54
    74 75
conjunction (72)
    on left: 55 56, on right: 53 54 56
negation (73)
    on left: 57 58, on right: 55 56 58
compareExpr (74)
    on left: 59 60 61 62 63 64 65, on right: 57
arithExpr (75)
    on left: 66 67 68, on right: 59 60 61 62 63 64 65 67 68 84
term (76)
    on left: 69 70 71, on right: 66 67 68 70 71
factor (77)
    on left: 72 73, on right: 69 70 71 73
primary (78)
    on left: 74 75 76 77 78, on right: 72
functionCall (79)
    on left: 79, on right: 77
constant (80)
    on left: 80 81 82, on right: 78
variable (81)
    on left: 83 84, on right: 9 20 52 76


State 0

    0 $accept: . program $end

    '{'  shift, and go to state 1

    program  go to state 2
    scope    go to state 3


State 1

    6 scope: '{' . optDeclarations statements '}'

    BOOL  shift, and go to state 4
    INT   shift, and go to state 5
    PROC  shift, and go to state 6

    $default  reduce using rule 8 (optDeclarations)

    declarations     go to state 7
    optDeclarations  go to state 8
    declaration      go to state 9
    typeAndIdent     go to state 10
    type             go to state 11


State 2

    0 $accept: program . $end

    $end  shift, and go to state 12


State 3

    1 program: scope .

    $default  reduce using rule 1 (program)


State 4

   44 type: BOOL .

    $default  reduce using rule 44 (type)


State 5

   43 type: INT .

    $default  reduce using rule 43 (type)


State 6

   33 declaration: PROC . IDENT routineBody

    IDENT  shift, and go to state 13


State 7

    5 declarations: declarations . declaration
    7 optDeclarations: declarations .

    BOOL  shift, and go to state 4
    INT   shift, and go to state 5
    PROC  shift, and go to state 6

    $default  reduce using rule 7 (optDeclarations)

    declaration   go to state 14
    typeAndIdent  go to state 10
    type          go to state 11


State 8

    6 scope: '{' optDeclarations . statements '}'

    IDENT   shift, and go to state 15
    DO      shift, and go to state 16
    EXIT    shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    PUT     shift, and go to state 20
    RESULT  shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    FOR     shift, and go to state 24
    ASSERT  shift, and go to state 25
    '{'     shift, and go to state 1

    statements     go to state 26
    scope          go to state 27
    statement      go to state 28
    procStatement  go to state 29
    ifstatement    go to state 30
    variable       go to state 31


State 9

    4 declarations: declaration .

    $default  reduce using rule 4 (declarations)


State 10

   29 declaration: typeAndIdent .
   30            | typeAndIdent . '=' expression
   31            | typeAndIdent . '[' INTCONST ']'
   32            | typeAndIdent . routineBody

    '='  shift, and go to state 32
    ':'  shift, and go to state 33
    '('  shift, and go to state 34
    '['  shift, and go to state 35

    $default  reduce using rule 29 (declaration)

    routineBody  go to state 36


State 11

   38 typeAndIdent: type . IDENT

    IDENT  shift, and go to state 37


State 12

    0 $accept: program $end .

    $default  accept


State 13

   33 declaration: PROC IDENT . routineBody

    ':'  shift, and go to state 33
    '('  shift, and go to state 34

    routineBody  go to state 38


State 14

    5 declarations: declarations declaration .

    $default  reduce using rule 5 (declarations)


State 15

   25 procStatement: IDENT .
   26              | IDENT . '(' arguments ')'
   83 variable: IDENT .
   84         | IDENT . '[' arithExpr ']'

    '('  shift, and go to state 39
    '['  shift, and go to state 40

    '='       reduce using rule 83 (variable)
    $default  reduce using rule 25 (procStatement)


State 16

   12 statement: DO . statements UNTIL expression

    IDENT   shift, and go to state 15
    DO      shift, and go to state 16
    EXIT    shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    PUT     shift, and go to state 20
    RESULT  shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    FOR     shift, and go to state 24
    ASSERT  shift, and go to state 25
    '{'     shift, and go to state 1

    statements     go to state 41
    scope          go to state 27
    statement      go to state 28
    procStatement  go to state 29
    ifstatement    go to state 30
    variable       go to state 31


State 17

   13 statement: EXIT .

    $default  reduce using rule 13 (statement)


State 18

   17 statement: GET . inputs

    IDENT  shift, and go to state 42

    inputs    go to state 43
    input     go to state 44
    variable  go to state 45


State 19

   27 ifstatement: IF . expression THEN statements ELSE statements FI
   28            | IF . expression THEN statements FI

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    expression    go to state 53
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 20

   16 statement: PUT . outputs

    IDENT      shift, and go to state 46
    TEXTCONST  shift, and go to state 64
    INTCONST   shift, and go to state 47
    SKIP       shift, and go to state 65
    TFALSE     shift, and go to state 48
    TTRUE      shift, and go to state 49
    '-'        shift, and go to state 50
    '('        shift, and go to state 51
    '!'        shift, and go to state 52

    output        go to state 66
    outputs       go to state 67
    expression    go to state 68
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 21

   15 statement: RESULT . expression

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    expression    go to state 69
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 22

   14 statement: RETURN .

    $default  reduce using rule 14 (statement)


State 23

   11 statement: WHILE . expression DO statements OD

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    expression    go to state 70
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 24

   20 statement: FOR . variable ':' '=' expression TO expression byPart statements ROF

    IDENT  shift, and go to state 42

    variable  go to state 71


State 25

   21 statement: ASSERT . expression

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    expression    go to state 72
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 26

    3 statements: statements . statement
    6 scope: '{' optDeclarations statements . '}'

    IDENT   shift, and go to state 15
    DO      shift, and go to state 16
    EXIT    shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    PUT     shift, and go to state 20
    RESULT  shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    FOR     shift, and go to state 24
    ASSERT  shift, and go to state 25
    '{'     shift, and go to state 1
    '}'     shift, and go to state 73

    scope          go to state 27
    statement      go to state 74
    procStatement  go to state 29
    ifstatement    go to state 30
    variable       go to state 31


State 27

   19 statement: scope .

    $default  reduce using rule 19 (statement)


State 28

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 29

   18 statement: procStatement .

    $default  reduce using rule 18 (statement)


State 30

   10 statement: ifstatement .

    $default  reduce using rule 10 (statement)


State 31

    9 statement: variable . '=' expression

    '='  shift, and go to state 75


State 32

   30 declaration: typeAndIdent '=' . expression

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    expression    go to state 76
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 33

   36 routineBody: ':' . FORWARD
   37            | ':' . scope

    FORWARD  shift, and go to state 77
    '{'      shift, and go to state 1

    scope  go to state 78


State 34

   34 routineBody: '(' . parameters ')' ':' scope
   35            | '(' . parameters ')' ':' FORWARD

    BOOL  shift, and go to state 4
    INT   shift, and go to state 5

    typeAndIdent  go to state 79
    parameters    go to state 80
    type          go to state 11


State 35

   31 declaration: typeAndIdent '[' . INTCONST ']'

    INTCONST  shift, and go to state 81


State 36

   32 declaration: typeAndIdent routineBody .

    $default  reduce using rule 32 (declaration)


State 37

   38 typeAndIdent: type IDENT .

    $default  reduce using rule 38 (typeAndIdent)


State 38

   33 declaration: PROC IDENT routineBody .

    $default  reduce using rule 33 (declaration)


State 39

   26 procStatement: IDENT '(' . arguments ')'

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    arguments     go to state 82
    expression    go to state 83
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 40

   84 variable: IDENT '[' . arithExpr ']'

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51

    arithExpr     go to state 84
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 41

    3 statements: statements . statement
   12 statement: DO statements . UNTIL expression

    IDENT   shift, and go to state 15
    DO      shift, and go to state 16
    EXIT    shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    PUT     shift, and go to state 20
    RESULT  shift, and go to state 21
    RETURN  shift, and go to state 22
    UNTIL   shift, and go to state 85
    WHILE   shift, and go to state 23
    FOR     shift, and go to state 24
    ASSERT  shift, and go to state 25
    '{'     shift, and go to state 1

    scope          go to state 27
    statement      go to state 74
    procStatement  go to state 29
    ifstatement    go to state 30
    variable       go to state 31


State 42

   83 variable: IDENT .
   84         | IDENT . '[' arithExpr ']'

    '['  shift, and go to state 40

    $default  reduce using rule 83 (variable)


State 43

   17 statement: GET inputs .
   51 inputs: inputs . ',' input

    ','  shift, and go to state 86

    $default  reduce using rule 17 (statement)


State 44

   50 inputs: input .

    $default  reduce using rule 50 (inputs)


State 45

   52 input: variable .

    $default  reduce using rule 52 (input)


State 46

   79 functionCall: IDENT . '(' arguments ')'
   83 variable: IDENT .
   84         | IDENT . '[' arithExpr ']'

    '('  shift, and go to state 87
    '['  shift, and go to state 40

    $default  reduce using rule 83 (variable)


State 47

   80 constant: INTCONST .

    $default  reduce using rule 80 (constant)


State 48

   82 constant: TFALSE .

    $default  reduce using rule 82 (constant)


State 49

   81 constant: TTRUE .

    $default  reduce using rule 81 (constant)


State 50

   73 factor: '-' . factor

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51

    factor        go to state 88
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 51

   74 primary: '(' . expression ')'
   75        | '(' . expression '?' expression ':' expression ')'

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    expression    go to state 89
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 52

   58 negation: '!' . negation

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    negation      go to state 90
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 53

   27 ifstatement: IF expression . THEN statements ELSE statements FI
   28            | IF expression . THEN statements FI
   54 expression: expression . '|' conjunction

    THEN  shift, and go to state 91
    '|'   shift, and go to state 92


State 54

   53 expression: conjunction .
   56 conjunction: conjunction . '&' negation

    '&'  shift, and go to state 93

    $default  reduce using rule 53 (expression)


State 55

   55 conjunction: negation .

    $default  reduce using rule 55 (conjunction)


State 56

   57 negation: compareExpr .

    $default  reduce using rule 57 (negation)


State 57

   59 compareExpr: arithExpr .
   60            | arithExpr . '=' arithExpr
   61            | arithExpr . '#' arithExpr
   62            | arithExpr . '>' arithExpr
   63            | arithExpr . '>' '=' arithExpr
   64            | arithExpr . '<' arithExpr
   65            | arithExpr . '<' '=' arithExpr
   67 arithExpr: arithExpr . '+' term
   68          | arithExpr . '-' term

    '='  shift, and go to state 94
    '-'  shift, and go to state 95
    '#'  shift, and go to state 96
    '>'  shift, and go to state 97
    '<'  shift, and go to state 98
    '+'  shift, and go to state 99

    $default  reduce using rule 59 (compareExpr)


State 58

   66 arithExpr: term .
   70 term: term . '*' factor
   71     | term . '/' factor

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 66 (arithExpr)


State 59

   69 term: factor .

    $default  reduce using rule 69 (term)


State 60

   72 factor: primary .

    $default  reduce using rule 72 (factor)


State 61

   77 primary: functionCall .

    $default  reduce using rule 77 (primary)


State 62

   78 primary: constant .

    $default  reduce using rule 78 (primary)


State 63

   76 primary: variable .

    $default  reduce using rule 76 (primary)


State 64

   46 output: TEXTCONST .

    $default  reduce using rule 46 (output)


State 65

   47 output: SKIP .

    $default  reduce using rule 47 (output)


State 66

   48 outputs: output .

    $default  reduce using rule 48 (outputs)


State 67

   16 statement: PUT outputs .
   49 outputs: outputs . ',' output

    ','  shift, and go to state 102

    $default  reduce using rule 16 (statement)


State 68

   45 output: expression .
   54 expression: expression . '|' conjunction

    '|'  shift, and go to state 92

    $default  reduce using rule 45 (output)


State 69

   15 statement: RESULT expression .
   54 expression: expression . '|' conjunction

    '|'  shift, and go to state 92

    $default  reduce using rule 15 (statement)


State 70

   11 statement: WHILE expression . DO statements OD
   54 expression: expression . '|' conjunction

    DO   shift, and go to state 103
    '|'  shift, and go to state 92


State 71

   20 statement: FOR variable . ':' '=' expression TO expression byPart statements ROF

    ':'  shift, and go to state 104


State 72

   21 statement: ASSERT expression .
   54 expression: expression . '|' conjunction

    '|'  shift, and go to state 92

    $default  reduce using rule 21 (statement)


State 73

    6 scope: '{' optDeclarations statements '}' .

    $default  reduce using rule 6 (scope)


State 74

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 75

    9 statement: variable '=' . expression

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    expression    go to state 105
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 76

   30 declaration: typeAndIdent '=' expression .
   54 expression: expression . '|' conjunction

    '|'  shift, and go to state 92

    $default  reduce using rule 30 (declaration)


State 77

   36 routineBody: ':' FORWARD .

    $default  reduce using rule 36 (routineBody)


State 78

   37 routineBody: ':' scope .

    $default  reduce using rule 37 (routineBody)


State 79

   39 parameters: typeAndIdent .

    $default  reduce using rule 39 (parameters)


State 80

   34 routineBody: '(' parameters . ')' ':' scope
   35            | '(' parameters . ')' ':' FORWARD
   40 parameters: parameters . ',' typeAndIdent

    ')'  shift, and go to state 106
    ','  shift, and go to state 107


State 81

   31 declaration: typeAndIdent '[' INTCONST . ']'

    ']'  shift, and go to state 108


State 82

   26 procStatement: IDENT '(' arguments . ')'
   42 arguments: arguments . ',' expression

    ')'  shift, and go to state 109
    ','  shift, and go to state 110


State 83

   41 arguments: expression .
   54 expression: expression . '|' conjunction

    '|'  shift, and go to state 92

    $default  reduce using rule 41 (arguments)


State 84

   67 arithExpr: arithExpr . '+' term
   68          | arithExpr . '-' term
   84 variable: IDENT '[' arithExpr . ']'

    '-'  shift, and go to state 95
    ']'  shift, and go to state 111
    '+'  shift, and go to state 99


State 85

   12 statement: DO statements UNTIL . expression

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    expression    go to state 112
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 86

   51 inputs: inputs ',' . input

    IDENT  shift, and go to state 42

    input     go to state 113
    variable  go to state 45


State 87

   79 functionCall: IDENT '(' . arguments ')'

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    arguments     go to state 114
    expression    go to state 83
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 88

   73 factor: '-' factor .

    $default  reduce using rule 73 (factor)


State 89

   54 expression: expression . '|' conjunction
   74 primary: '(' expression . ')'
   75        | '(' expression . '?' expression ':' expression ')'

    ')'  shift, and go to state 115
    '|'  shift, and go to state 92
    '?'  shift, and go to state 116


State 90

   58 negation: '!' negation .

    $default  reduce using rule 58 (negation)


State 91

   27 ifstatement: IF expression THEN . statements ELSE statements FI
   28            | IF expression THEN . statements FI

    IDENT   shift, and go to state 15
    DO      shift, and go to state 16
    EXIT    shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    PUT     shift, and go to state 20
    RESULT  shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    FOR     shift, and go to state 24
    ASSERT  shift, and go to state 25
    '{'     shift, and go to state 1

    statements     go to state 117
    scope          go to state 27
    statement      go to state 28
    procStatement  go to state 29
    ifstatement    go to state 30
    variable       go to state 31


State 92

   54 expression: expression '|' . conjunction

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    conjunction   go to state 118
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 93

   56 conjunction: conjunction '&' . negation

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    negation      go to state 119
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 94

   60 compareExpr: arithExpr '=' . arithExpr

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51

    arithExpr     go to state 120
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 95

   68 arithExpr: arithExpr '-' . term

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51

    term          go to state 121
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 96

   61 compareExpr: arithExpr '#' . arithExpr

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51

    arithExpr     go to state 122
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 97

   62 compareExpr: arithExpr '>' . arithExpr
   63            | arithExpr '>' . '=' arithExpr

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '='       shift, and go to state 123
    '-'       shift, and go to state 50
    '('       shift, and go to state 51

    arithExpr     go to state 124
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 98

   64 compareExpr: arithExpr '<' . arithExpr
   65            | arithExpr '<' . '=' arithExpr

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '='       shift, and go to state 125
    '-'       shift, and go to state 50
    '('       shift, and go to state 51

    arithExpr     go to state 126
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 99

   67 arithExpr: arithExpr '+' . term

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51

    term          go to state 127
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 100

   70 term: term '*' . factor

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51

    factor        go to state 128
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 101

   71 term: term '/' . factor

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51

    factor        go to state 129
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 102

   49 outputs: outputs ',' . output

    IDENT      shift, and go to state 46
    TEXTCONST  shift, and go to state 64
    INTCONST   shift, and go to state 47
    SKIP       shift, and go to state 65
    TFALSE     shift, and go to state 48
    TTRUE      shift, and go to state 49
    '-'        shift, and go to state 50
    '('        shift, and go to state 51
    '!'        shift, and go to state 52

    output        go to state 130
    expression    go to state 68
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 103

   11 statement: WHILE expression DO . statements OD

    IDENT   shift, and go to state 15
    DO      shift, and go to state 16
    EXIT    shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    PUT     shift, and go to state 20
    RESULT  shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    FOR     shift, and go to state 24
    ASSERT  shift, and go to state 25
    '{'     shift, and go to state 1

    statements     go to state 131
    scope          go to state 27
    statement      go to state 28
    procStatement  go to state 29
    ifstatement    go to state 30
    variable       go to state 31


State 104

   20 statement: FOR variable ':' . '=' expression TO expression byPart statements ROF

    '='  shift, and go to state 132


State 105

    9 statement: variable '=' expression .
   54 expression: expression . '|' conjunction

    '|'  shift, and go to state 92

    $default  reduce using rule 9 (statement)


State 106

   34 routineBody: '(' parameters ')' . ':' scope
   35            | '(' parameters ')' . ':' FORWARD

    ':'  shift, and go to state 133


State 107

   40 parameters: parameters ',' . typeAndIdent

    BOOL  shift, and go to state 4
    INT   shift, and go to state 5

    typeAndIdent  go to state 134
    type          go to state 11


State 108

   31 declaration: typeAndIdent '[' INTCONST ']' .

    $default  reduce using rule 31 (declaration)


State 109

   26 procStatement: IDENT '(' arguments ')' .

    $default  reduce using rule 26 (procStatement)


State 110

   42 arguments: arguments ',' . expression

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    expression    go to state 135
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 111

   84 variable: IDENT '[' arithExpr ']' .

    $default  reduce using rule 84 (variable)


State 112

   12 statement: DO statements UNTIL expression .
   54 expression: expression . '|' conjunction

    '|'  shift, and go to state 92

    $default  reduce using rule 12 (statement)


State 113

   51 inputs: inputs ',' input .

    $default  reduce using rule 51 (inputs)


State 114

   42 arguments: arguments . ',' expression
   79 functionCall: IDENT '(' arguments . ')'

    ')'  shift, and go to state 136
    ','  shift, and go to state 110


State 115

   74 primary: '(' expression ')' .

    $default  reduce using rule 74 (primary)


State 116

   75 primary: '(' expression '?' . expression ':' expression ')'

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    expression    go to state 137
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 117

    3 statements: statements . statement
   27 ifstatement: IF expression THEN statements . ELSE statements FI
   28            | IF expression THEN statements . FI

    IDENT   shift, and go to state 15
    DO      shift, and go to state 16
    ELSE    shift, and go to state 138
    EXIT    shift, and go to state 17
    FI      shift, and go to state 139
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    PUT     shift, and go to state 20
    RESULT  shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    FOR     shift, and go to state 24
    ASSERT  shift, and go to state 25
    '{'     shift, and go to state 1

    scope          go to state 27
    statement      go to state 74
    procStatement  go to state 29
    ifstatement    go to state 30
    variable       go to state 31


State 118

   54 expression: expression '|' conjunction .
   56 conjunction: conjunction . '&' negation

    '&'  shift, and go to state 93

    $default  reduce using rule 54 (expression)


State 119

   56 conjunction: conjunction '&' negation .

    $default  reduce using rule 56 (conjunction)


State 120

   60 compareExpr: arithExpr '=' arithExpr .
   67 arithExpr: arithExpr . '+' term
   68          | arithExpr . '-' term

    '-'  shift, and go to state 95
    '+'  shift, and go to state 99

    $default  reduce using rule 60 (compareExpr)


State 121

   68 arithExpr: arithExpr '-' term .
   70 term: term . '*' factor
   71     | term . '/' factor

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 68 (arithExpr)


State 122

   61 compareExpr: arithExpr '#' arithExpr .
   67 arithExpr: arithExpr . '+' term
   68          | arithExpr . '-' term

    '-'  shift, and go to state 95
    '+'  shift, and go to state 99

    $default  reduce using rule 61 (compareExpr)


State 123

   63 compareExpr: arithExpr '>' '=' . arithExpr

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51

    arithExpr     go to state 140
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 124

   62 compareExpr: arithExpr '>' arithExpr .
   67 arithExpr: arithExpr . '+' term
   68          | arithExpr . '-' term

    '-'  shift, and go to state 95
    '+'  shift, and go to state 99

    $default  reduce using rule 62 (compareExpr)


State 125

   65 compareExpr: arithExpr '<' '=' . arithExpr

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51

    arithExpr     go to state 141
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 126

   64 compareExpr: arithExpr '<' arithExpr .
   67 arithExpr: arithExpr . '+' term
   68          | arithExpr . '-' term

    '-'  shift, and go to state 95
    '+'  shift, and go to state 99

    $default  reduce using rule 64 (compareExpr)


State 127

   67 arithExpr: arithExpr '+' term .
   70 term: term . '*' factor
   71     | term . '/' factor

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 67 (arithExpr)


State 128

   70 term: term '*' factor .

    $default  reduce using rule 70 (term)


State 129

   71 term: term '/' factor .

    $default  reduce using rule 71 (term)


State 130

   49 outputs: outputs ',' output .

    $default  reduce using rule 49 (outputs)


State 131

    3 statements: statements . statement
   11 statement: WHILE expression DO statements . OD

    IDENT   shift, and go to state 15
    DO      shift, and go to state 16
    EXIT    shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    OD      shift, and go to state 142
    PUT     shift, and go to state 20
    RESULT  shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    FOR     shift, and go to state 24
    ASSERT  shift, and go to state 25
    '{'     shift, and go to state 1

    scope          go to state 27
    statement      go to state 74
    procStatement  go to state 29
    ifstatement    go to state 30
    variable       go to state 31


State 132

   20 statement: FOR variable ':' '=' . expression TO expression byPart statements ROF

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    expression    go to state 143
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 133

   34 routineBody: '(' parameters ')' ':' . scope
   35            | '(' parameters ')' ':' . FORWARD

    FORWARD  shift, and go to state 144
    '{'      shift, and go to state 1

    scope  go to state 145


State 134

   40 parameters: parameters ',' typeAndIdent .

    $default  reduce using rule 40 (parameters)


State 135

   42 arguments: arguments ',' expression .
   54 expression: expression . '|' conjunction

    '|'  shift, and go to state 92

    $default  reduce using rule 42 (arguments)


State 136

   79 functionCall: IDENT '(' arguments ')' .

    $default  reduce using rule 79 (functionCall)


State 137

   54 expression: expression . '|' conjunction
   75 primary: '(' expression '?' expression . ':' expression ')'

    ':'  shift, and go to state 146
    '|'  shift, and go to state 92


State 138

   27 ifstatement: IF expression THEN statements ELSE . statements FI

    IDENT   shift, and go to state 15
    DO      shift, and go to state 16
    EXIT    shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    PUT     shift, and go to state 20
    RESULT  shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    FOR     shift, and go to state 24
    ASSERT  shift, and go to state 25
    '{'     shift, and go to state 1

    statements     go to state 147
    scope          go to state 27
    statement      go to state 28
    procStatement  go to state 29
    ifstatement    go to state 30
    variable       go to state 31


State 139

   28 ifstatement: IF expression THEN statements FI .

    $default  reduce using rule 28 (ifstatement)


State 140

   63 compareExpr: arithExpr '>' '=' arithExpr .
   67 arithExpr: arithExpr . '+' term
   68          | arithExpr . '-' term

    '-'  shift, and go to state 95
    '+'  shift, and go to state 99

    $default  reduce using rule 63 (compareExpr)


State 141

   65 compareExpr: arithExpr '<' '=' arithExpr .
   67 arithExpr: arithExpr . '+' term
   68          | arithExpr . '-' term

    '-'  shift, and go to state 95
    '+'  shift, and go to state 99

    $default  reduce using rule 65 (compareExpr)


State 142

   11 statement: WHILE expression DO statements OD .

    $default  reduce using rule 11 (statement)


State 143

   20 statement: FOR variable ':' '=' expression . TO expression byPart statements ROF
   54 expression: expression . '|' conjunction

    TO   shift, and go to state 148
    '|'  shift, and go to state 92


State 144

   35 routineBody: '(' parameters ')' ':' FORWARD .

    $default  reduce using rule 35 (routineBody)


State 145

   34 routineBody: '(' parameters ')' ':' scope .

    $default  reduce using rule 34 (routineBody)


State 146

   75 primary: '(' expression '?' expression ':' . expression ')'

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    expression    go to state 149
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 147

    3 statements: statements . statement
   27 ifstatement: IF expression THEN statements ELSE statements . FI

    IDENT   shift, and go to state 15
    DO      shift, and go to state 16
    EXIT    shift, and go to state 17
    FI      shift, and go to state 150
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    PUT     shift, and go to state 20
    RESULT  shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    FOR     shift, and go to state 24
    ASSERT  shift, and go to state 25
    '{'     shift, and go to state 1

    scope          go to state 27
    statement      go to state 74
    procStatement  go to state 29
    ifstatement    go to state 30
    variable       go to state 31


State 148

   20 statement: FOR variable ':' '=' expression TO . expression byPart statements ROF

    IDENT     shift, and go to state 46
    INTCONST  shift, and go to state 47
    TFALSE    shift, and go to state 48
    TTRUE     shift, and go to state 49
    '-'       shift, and go to state 50
    '('       shift, and go to state 51
    '!'       shift, and go to state 52

    expression    go to state 151
    conjunction   go to state 54
    negation      go to state 55
    compareExpr   go to state 56
    arithExpr     go to state 57
    term          go to state 58
    factor        go to state 59
    primary       go to state 60
    functionCall  go to state 61
    constant      go to state 62
    variable      go to state 63


State 149

   54 expression: expression . '|' conjunction
   75 primary: '(' expression '?' expression ':' expression . ')'

    ')'  shift, and go to state 152
    '|'  shift, and go to state 92


State 150

   27 ifstatement: IF expression THEN statements ELSE statements FI .

    $default  reduce using rule 27 (ifstatement)


State 151

   20 statement: FOR variable ':' '=' expression TO expression . byPart statements ROF
   54 expression: expression . '|' conjunction

    BY   shift, and go to state 153
    '|'  shift, and go to state 92

    $default  reduce using rule 24 (byPart)

    byPart  go to state 154


State 152

   75 primary: '(' expression '?' expression ':' expression ')' .

    $default  reduce using rule 75 (primary)


State 153

   22 byPart: BY . INTCONST
   23       | BY . '-' INTCONST

    INTCONST  shift, and go to state 155
    '-'       shift, and go to state 156


State 154

   20 statement: FOR variable ':' '=' expression TO expression byPart . statements ROF

    IDENT   shift, and go to state 15
    DO      shift, and go to state 16
    EXIT    shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    PUT     shift, and go to state 20
    RESULT  shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    FOR     shift, and go to state 24
    ASSERT  shift, and go to state 25
    '{'     shift, and go to state 1

    statements     go to state 157
    scope          go to state 27
    statement      go to state 28
    procStatement  go to state 29
    ifstatement    go to state 30
    variable       go to state 31


State 155

   22 byPart: BY INTCONST .

    $default  reduce using rule 22 (byPart)


State 156

   23 byPart: BY '-' . INTCONST

    INTCONST  shift, and go to state 158


State 157

    3 statements: statements . statement
   20 statement: FOR variable ':' '=' expression TO expression byPart statements . ROF

    IDENT   shift, and go to state 15
    DO      shift, and go to state 16
    EXIT    shift, and go to state 17
    GET     shift, and go to state 18
    IF      shift, and go to state 19
    PUT     shift, and go to state 20
    RESULT  shift, and go to state 21
    RETURN  shift, and go to state 22
    WHILE   shift, and go to state 23
    FOR     shift, and go to state 24
    ROF     shift, and go to state 159
    ASSERT  shift, and go to state 25
    '{'     shift, and go to state 1

    scope          go to state 27
    statement      go to state 74
    procStatement  go to state 29
    ifstatement    go to state 30
    variable       go to state 31


State 158

   23 byPart: BY '-' INTCONST .

    $default  reduce using rule 23 (byPart)


State 159

   20 statement: FOR variable ':' '=' expression TO expression byPart statements ROF .

    $default  reduce using rule 20 (statement)
